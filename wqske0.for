C
C**********************************************************************C
C**********************************************************************C
C**********************************************************************C
C
      SUBROUTINE WQSKE0
C
C**********************************************************************C
C
C SOLVE KINETIC EQ FROM K=KC (SURFACE LAYER) TO K=1 (BOTTOM).
C: AFTER COMPUTING NEW VALUES, STORE WQVO+WQV INTO WQVO(L,K,NWQV) EXCEPT
C: NWQV=15,19,21.
C
C**********************************************************************C
C
C  ORGINALLY CODED BY K.-Y. PARK
C  OPTIMIZED AND MODIFIED BY J.M. HAMRICK
C
C  MODIFIED BY J.S. ON 5/5/98 TO ADD A MACROALGAE COMPONENT
C
C **  LAST MODIFIED BY JOHN HAMRICK AND MIKE MORTON ON 8 AUGUST 2001
C
C **  THIS SUBROUTINE IS PART OF  EFDC-FULL VERSION 1.0a 
C
C **  LAST MODIFIED BY JOHN HAMRICK ON 1 NOVEMBER 2001
C
C----------------------------------------------------------------------C
C
C CHANGE RECORD
C DATE MODIFIED     BY                 DATE APPROVED    BY
C
C----------------------------------------------------------------------C
C
C
C**********************************************************************C
C
      INCLUDE 'EFDC.PAR'
      INCLUDE 'EFDC.CMN'
      DIMENSION WQDOS(LCMWQ), WQI0BOT(LCMWQ)
C
C**********************************************************************C
C
C       LTEST=51
C       OPEN(1,FILE='WQSKE0.DIA',POSITION='APPEND')
C       IVAL=MOD(N,36)
C       IIITEST=0
C       IF(IVAL.EQ.0)THEN
C         IIITEST=1
C         WRITE(1,1414)N
C       ENDIF
C
      CNS1=2.718
C
      NS=1
C
C INITIAL SOLAR RADIATION AT TOP OF SURFACE LAYER  (J.S. 5/4/99)
C
      DO L=2,LA
        WQI0BOT(L)=WQI0
C        WQI0BOT(L)=WQI0 * PSHADE(L)
      ENDDO
C
C      DO ND=1,NDM
C      LF=2+(ND-1)*LDM
C      LL=LF+LDM-1
      DO K=KC,1,-1
C
C DZWQ=1/H, VOLWQ=1/VOL
C
       DO L=2,LA
        TWQ(L)=TEM(L,K)
        SWQ(L)=MAX(SAL(L,K), 0.0)
        DZWQ(L) = 1.0 / (DZC(K)*HP(L))
        VOLWQ(L) = DZWQ(L) / DXYP(L)
        IMWQZT(L)=IWQZMAP(L,K)
       ENDDO
C
C----------------------------------------------------------------------C
C
       DO L=2,LA
        WQBCSET(L,1) = WQWSC(IMWQZT(L))*DZWQ(L)
        WQBDSET(L,1) = WQWSD(IMWQZT(L))*DZWQ(L)
        WQBGSET(L,1) = WQWSG(IMWQZT(L))*DZWQ(L)
        WQRPSET(L,1) = WQWSRP(IMWQZT(L))*DZWQ(L)
        WQLPSET(L,1) = WQWSLP(IMWQZT(L))*DZWQ(L)
       ENDDO
C
       IF(IWQSRP.EQ.1)THEN
        DO L=2,LA
         WQWSSET(L,1) = WQWSS(IMWQZT(L))*DZWQ(L)
        ENDDO
       ENDIF
C
       IF(K.NE.KC)THEN
C
        DO L=2,LA
         IMWQZT1(L)=IWQZMAP(L,K+1)
        ENDDO
C
        DO L=2,LA
         WQBCSET(L,2) = WQWSC(IMWQZT1(L))*DZWQ(L)
         WQBDSET(L,2) = WQWSD(IMWQZT1(L))*DZWQ(L)
         WQBGSET(L,2) = WQWSG(IMWQZT1(L))*DZWQ(L)
         WQRPSET(L,2) = WQWSRP(IMWQZT1(L))*DZWQ(L)
         WQLPSET(L,2) = WQWSLP(IMWQZT1(L))*DZWQ(L)
        ENDDO
C
        IF(IWQSRP.EQ.1)THEN
         DO L=2,LA
         WQWSSET(L,2) = WQWSS(IMWQZT1(L))*DZWQ(L)
         ENDDO
        ENDIF
C
       ENDIF
C
C----------------------------------------------------------------------C
C
C FIND AN INDEX FOR LOOK-UP TABLE FOR TEMPERATURE DEPENDENCY
C
       DO L=2,LA
C        IWQT(L) = 2.0*TWQ(L) +11
c - charles  IWQT(L) = 10.0*TWQ(L) +151
        IWQT(L) = NINT( 4.*TWQ(L)+121.)
C        IWQT(L) = 10.0*TWQ(L) + 51
        IF(IWQT(L).LT.1 .OR. IWQT(L).GT.NWQTD)THEN
C MRM +++++++++ ADDED BY M. MORTON 08/05/98
        IF(ISDYNSTP.EQ.0)THEN
          TIMTMP=(DT*FLOAT(N)+TCON*TBEGIN)/86400.
        ELSE
          TIMTMP=TIMESEC/86400.
        ENDIF
          OPEN(2,FILE='ERROR.LOG',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(2,911) TIMTMP, L, IL(L), JL(L), K, TWQ(L)
911       FORMAT(/,'ERROR!! INVALID WATER TEMPERATURE, SUB WQSKE',/,
     +     'TIME, L, I, J, K, TWQ(L) = ', F10.5, 4I4, F10.4)
          CLOSE(2)
C MRM +++++++++ ADDED BY M. MORTON 07/24/98
C         PRINT*, 'L, K, TEM(L,K) = ', L,K,TWQ(L)
          WRITE(6,600)IL(L),JL(L),K,TWQ(L)
	    IWQT(L)=MAX(IWQT(L),1)
	    IWQT(L)=MIN(IWQT(L),NWQTD)
C          STOP 'ERROR!! INVALID WATER TEMPERATURE'
        ENDIF
       ENDDO
C
  600 FORMAT(' I,J,K,TEM = ',3I5,E13.4)
C
C----------------------------------------------------------------------C
C
C1-3 ALGAL GROWTH: NUTRIENT
C
C NOTE: MRM 04/29/99  ADDED ARRAYS TO KEEP TRACK OF
C       NITROGEN, PHOSPHORUS, LIGHT, AND TEMPERATURE LIMITS
C       FOR ALGAE GROWTH FOR CYANOBACTERIA, DIATOMS, GREENS,
C       AND MACROALGAE.  THESE ARE THE ARRAYS:
C        XLIMNX(L,K) = NITROGEN    LIMITATION FOR ALGAE GROUP X
C        XLIMPX(L,K) = PHOSPHORUS  LIMITATION FOR ALGAE GROUP X
C        XLIMIX(L,K) = LIGHT       LIMITATION FOR ALGAE GROUP X
C        XLIMTX(L,K) = TEMPERATURE LIMITATION FOR ALGAE GROUP X
C
       DO L=2,LA
         IZ=IWQZMAP(L,K)
C
        RNH4WQ = MAX (WQVO(L,K,14), 0.0)
        RNO3WQ = MAX (WQVO(L,K,15), 0.0)
CWQSKE0        PO4DWQ = MAX (WQPO4D(L,K), 0.0)
        RNH4NO3 = RNH4WQ + RNO3WQ
CWQSKE0        WQGNC = RNH4NO3 / (WQKHNC+RNH4NO3+ 1.E-18)
CWQSKE0        WQGND = RNH4NO3 / (WQKHND+RNH4NO3+ 1.E-18)
CWQSKE0        WQGNG = RNH4NO3 / (WQKHNG+RNH4NO3+ 1.E-18)
CWQSKE0        WQGPC = PO4DWQ / (WQKHPC+PO4DWQ+ 1.E-18)
CWQSKE0        WQGPD = PO4DWQ / (WQKHPD+PO4DWQ+ 1.E-18)
CWQSKE0        WQGPG = PO4DWQ / (WQKHPG+PO4DWQ+ 1.E-18)
CWQSKE0        XLIMNC(L,K) = XLIMNC(L,K) + WQGNC
CWQSKE0        XLIMND(L,K) = XLIMND(L,K) + WQGND
CWQSKE0        XLIMNG(L,K) = XLIMNG(L,K) + WQGNG
CWQSKE0        XLIMPC(L,K) = XLIMPC(L,K) + WQGPC
CWQSKE0        XLIMPD(L,K) = XLIMPD(L,K) + WQGPD
CWQSKE0        XLIMPG(L,K) = XLIMPG(L,K) + WQGPG
C
C MODIFIED BY J.S.(5/5/98) FOR MACALGAE
C
CWQSKE0        IF(IDNOTRVA.GT.0 .AND. K.EQ.1)THEN
CWQSKE0          WQGNM = RNH4NO3 / (WQKHNM+RNH4NO3 + 1.E-18)
CWQSKE0          WQGPM = PO4DWQ / (WQKHPM+PO4DWQ + 1.E-18)
CWQSKE0          WQF1NM = MIN(WQGNM, WQGPM)
CWQSKE0          XLIMNM(L,K) = XLIMNM(L,K) + WQGNM
CWQSKE0          XLIMPM(L,K) = XLIMPM(L,K) + WQGPM
CWQSKE0        ENDIF
C J.S.
CWQSKE0        WQF1NC = MIN(WQGNC, WQGPC)
CWQSKE0        IF(IWQSI.EQ.1)THEN
CWQSKE0          SADWQ = MAX (WQSAD(L,K), 0.0)
CWQSKE0          WQGSD = SADWQ / (WQKHS+SADWQ+ 1.E-18)
CWQSKE0          WQF1ND = MIN(WQGND, WQGPD, WQGSD)
CWQSKE0         ELSE
CWQSKE0          WQF1ND = MIN(WQGND, WQGPD)
CWQSKE0        ENDIF
CWQSKE0        WQF1NG = MIN(WQGNG, WQGPG)
CWQSKE0
CWQSKE0       IF(IDNOTRVA.GT.0)THEN
CWQSKE0         PO4DWQ = MAX (WQPO4D(L,K), 0.0)
CWQSKE0       ENDIF
C
C ALGAL GROWTH: LIGHT, WQHT(K)=REAL(KC-K)/REAL(KC)
C IN C&C, F2IC=F2IC/FCYAN, FACTOR TO ALLOW CYANOBACTERIA MAT FORMATION
C
C MRM 05/12/1999 USE RILEY (1956) EQUATION TO COMPUTE LIGHT EXTINCTION
C     AS A FUNCTION OF CHL CONC. IF WQKECHL IS LESS THAN ZERO:
C
CWQSKE0        XMRM = WQKECHL*WQCHL(L,K)
CWQSKE0        IF(WQKECHL .LT. 0.0)THEN
CWQSKE0          XMRM = 0.054*WQCHL(L,K)**0.6667 + 0.0088*WQCHL(L,K)
CWQSKE0        ENDIF
C        WQKESS = WQKEB(IMWQZT(L))+WQKETSS*SEDT(L,K)+WQKECHL*WQCHL(L,K)
CWQSKE0        WQKESS = WQKEB(IMWQZT(L))+WQKETSS*SEDT(L,K) + XMRM
CWQSKE0        WQKESS1 = WQKESS  
CWQSKE0        IF(K.NE.KC)THEN 
C         WQKESS1=WQKEB(IMWQZT(L))+WQKETSS*SEDT(L,KC)+WQKECHL*WQCHL(L,KC)
CWQSKE0          XMRM = WQKECHL*WQCHL(L,KC)
CWQSKE0          IF(WQKECHL .LT. 0.0)THEN
CWQSKE0            XMRM = 0.054*WQCHL(L,KC)**0.6667 + 0.0088*WQCHL(L,KC)
CWQSKE0          ENDIF
CWQSKE0          WQKESS1=WQKEB(IMWQZT(L))+WQKETSS*SEDT(L,KC) + XMRM
CWQSKE0        ENDIF
C
C COMPUTE SECCHI DEPTH FOR USE AS OUTPUT VARIABLE:
C
C        WQKETOT(L,K) = WQSDCOEF(IMWQZT(L)) / WQKESS
CWQSKE0        WQKETOT(L,K) = WQKESS
CWQSKE0        WQAVGIO = WQCIA*WQI0 + WQCIB*WQI1 + WQCIC*WQI2
C
CWQSKE0        IF(IWQSUN .EQ. 2)THEN
CWQSKE0          WQAVGIO = WQCIA*WQI1 + WQCIB*WQI2 + WQCIC*WQI3
CWQSKE0        ENDIF
C        WQAVGIO = WQAVGIO * PSHADE(L)
C        IF(IWQSUN.EQ.2) WQAVGIO=WQIS0
C
CWQSKE0        WQISC = MAX( WQAVGIO*EXP(-WQKESS1*WQDOPC), WQISMIN )
CWQSKE0        WQISD = MAX( WQAVGIO*EXP(-WQKESS1*WQDOPD), WQISMIN )
CWQSKE0        WQISG = MAX( WQAVGIO*EXP(-WQKESS1*WQDOPG), WQISMIN )
CWQSKE0        WQTT1 = (CNS1 * WQFD * DZWQ(L)) / WQKESS
C        WQFDI0 = - WQI0 / (WQFD+ 1.E-18)
CWQSKE0        WQFDI0 = - WQI0BOT(L) / (WQFD + 1.E-18)
C
CWQSKE0        WQFDC = WQFDI0 / (WQISC + 1.E-18)
CWQSKE0        WQFDD = WQFDI0 / (WQISD + 1.E-18)
CWQSKE0        WQFDG = WQFDI0 / (WQISG + 1.E-18)
CWQSKE0        WQHTT = WQHT(K) * HP(L)
C
CWQSKE0        WQTTB = EXP( -WQKESS * (WQHTT+1.0/DZWQ(L)) )
CWQSKE0        WQTTT = EXP( -WQKESS * WQHTT )
CWQSKE0        WQF2IC = WQTT1 * (EXP(WQFDC*WQTTB) - EXP(WQFDC*WQTTT))
CWQSKE0        WQF2ID = WQTT1 * (EXP(WQFDD*WQTTB) - EXP(WQFDD*WQTTT))
CWQSKE0        WQF2IG = WQTT1 * (EXP(WQFDG*WQTTB) - EXP(WQFDG*WQTTT))
C
C MRM APPLY SHADE FACTOR HERE:
C
CWQSKE0        WQF2IC = WQF2IC * PSHADE(L)
CWQSKE0        WQF2ID = WQF2ID * PSHADE(L)
CWQSKE0        WQF2IG = WQF2IG * PSHADE(L)
CWQSKE0        XLIMIC(L,K) = XLIMIC(L,K) + WQF2IC
CWQSKE0        XLIMID(L,K) = XLIMID(L,K) + WQF2ID
CWQSKE0        XLIMIG(L,K) = XLIMIG(L,K) + WQF2IG
C
C UPDATE SOLAR RADIATION AT BOTTOM OF THIS LAYER
C
CWQSKE0        WQI0BOT(L)=WQI0BOT(L)*EXP(-WQKESS*(1.0/DZWQ(L)))
C
C MODIFIED BY J.S.(5/5/98) FOR MACALGAE
C
CWQSKE0        IF(IDNOTRVA.GT.0 .AND. K.EQ.1)THEN
CWQSKE0          WQFDI0 = - WQI0BOT(L) / (WQFD + 1.E-18)
CWQSKE0          WQISM = MAX( WQAVGIO*EXP(-WQKESS1*WQDOPM(IZ)), WQISMIN )
CWQSKE0          WQFDM = WQFDI0 / (WQISM + 1.E-18)
CWQSKE0          WQF2IM = WQTT1 * (EXP(WQFDM*WQTTB) - EXP(WQFDM*WQTTT))
C
C MRM APPLY SHADE FACTOR HERE:
C
          WQF2IM = WQF2IM * PSHADE(L)
C
C MRM 09/02/99: APPLY MACROALGAE VELOCITY LIMITATION HERE:
C
C          WQVEL=SQRT(U(L,K)*U(L,K) + V(L,K)*V(L,K))
CWQSKE0          UMRM = MAX(U(L,K), U(L+1,K))
CWQSKE0          VMRM = MAX(V(L,K), V(LNC(L),K))
CWQSKE0          WQVEL=SQRT(UMRM*UMRM + VMRM*VMRM)
CWQSKE0          WQLVF=1.0
C
C OPTION 1 FOR VELOCITY LIMITATION ASSUMES MACROALGAE GROWTH
C IS LIMITED AT LOW VELOCITIES DUE TO REDUCED AVAILABILITY OF
C NUTRIENTS REACHING THE ALGAE BIOMASS.  USES A MICHAELIS-MENTON
C TYPE OF EQUATION.
C
CWQSKE0          IF(IWQVLIM .EQ. 1)THEN
CWQSKE0            IF(WQVEL .GT. WQKMVMIN(L))THEN
CWQSKE0              WQLVF = WQVEL / (WQKMV(L) + WQVEL)
CWQSKE0            ELSE
CWQSKE0              WQLVF = WQKMVMIN(L) / (WQKMV(L) + WQKMVMIN(L))
CWQSKE0            ENDIF
CWQSKE0          ENDIF
C
C OPTION 2 FOR VELOCITY LIMITATION APPLIES A FIVE-PARAMETER LOGISTIC
C FUNCTION THAT CAN BE ADJUSTED TO LIMIT MACROALGAE GROWTH FOR
C EITHER LOW OR HIGH (SCOUR) VELOCITIES.  IN STREAMS WITH LOW NUTRIENTS,
C THE LOW VELOCITY WILL LIKELY BE LIMITING SINCE AMPLE NUTRIENTS MAY
C NOT REACH THE ALGAE BIOMASS DUE TO REDUCED FLOW.  IN STREAMS WITH
C ABUNDANT NUTRIENTS, LOW VELOCITIES WILL NOT LIMIT MACROALGAE GROWTH,
C INSTEAD, HIGH VELOCITIES WILL LIKELY SCOUR THE MACROALGAE AND DETACH
C IT FROM THE SUBSTRATE.
C
CWQSKE0          IF(IWQVLIM .EQ.2)THEN
CWQSKE0            XNUMER = WQKMVA(L) - WQKMVD(L)
CWQSKE0            XDENOM = 1.0 + (WQVEL/WQKMVC(L))**WQKMVB(L)
CWQSKE0            WQLVF = WQKMVD(L) + ( XNUMER / (XDENOM**WQKMVE(L)) )
CWQSKE0          ENDIF
C
C USE THE MORE SEVERELY LIMITING OF VELOCITY OR NUTRIENT FACTORS:
C
CWQSKE0          XMRM = MIN(WQLVF, WQF1NM)
CWQSKE0          WQF1NM = XMRM
C
C MRM 09/02/99: APPLY MACROALGAE DENSITY LIMITATION HERE:
C FIRST CONVERT FROM MACROALGAE FROM A CONCENTRATION (MG C/M3)
C TO A DENSITY (MG C/M2).
C
CWQSKE0          XMRM = WQVO(L,K,IDNOTRVA)*DZC(K)*HP(L)
CWQSKE0          WQLDF = WQKBP(L) / (WQKBP(L) + XMRM)
CWQSKE0
CWQSKE0          WQPM(L)= WQPMM(IMWQZT(L))*WQF1NM*WQF2IM*WQTDGM(IWQT(L))*
CWQSKE0     +             WQLDF
CWQSKE0          XLIMVM(L,K) = XLIMVM(L,K) + WQLVF
CWQSKE0          XLIMDM(L,K) = XLIMDM(L,K) + WQLDF
CWQSKE0          XLIMIM(L,K) = XLIMIM(L,K) + WQF2IM
CWQSKE0          XLIMTM(L,K) = XLIMTM(L,K) + WQTDGM(IWQT(L))
CWQSKE0
CWQSKE0        ENDIF
CWQSKE0        XLIMTC(L,K) = XLIMTC(L,K) + WQTDGC(IWQT(L))
CWQSKE0        XLIMTD(L,K) = XLIMTD(L,K) + WQTDGD(IWQT(L))
CWQSKE0        XLIMTG(L,K) = XLIMTG(L,K) + WQTDGG(IWQT(L))
C J.S.
C
C: WQSTOX=WQSTOX**2
C
CWQSKE0        IF(IWQSTOX.EQ.1)THEN
CWQSKE0          WQF4SC = WQSTOX / (WQSTOX + SWQ(L)*SWQ(L)+1.E-12)
CWQSKE0          WQPC(L)=WQPMC(IMWQZT(L))*WQF1NC*WQF2IC*WQTDGC(IWQT(L))*WQF4SC
CWQSKE0        ELSE
CWQSKE0          WQPC(L) = WQPMC(IMWQZT(L))*WQF1NC*WQF2IC*WQTDGC(IWQT(L))
CWQSKE0        ENDIF
CWQSKE0        WQPD(L) = WQPMD(IMWQZT(L))*WQF1ND*WQF2ID*WQTDGD(IWQT(L))
CWQSKE0        WQPG(L) = WQPMG(IMWQZT(L))*WQF1NG*WQF2IG*WQTDGG(IWQT(L))
CWQSKE0
C MRM: WHEN USING HOURLY SOLAR RADIATION, SHUT DOWN PHOTOSYNTHESIS
C      AT NIGHT, I.E., WHEN SOLAR RADIATION IS LESS THAN 0.001 (05/11/99).
CWQSKE0        IF(IWQSUN .EQ. 2)THEN
CWQSKE0          IF(WQI0 .LE. 0.001)THEN
CWQSKE0            WQPC(L) = 0.0
CWQSKE0            WQPD(L) = 0.0
CWQSKE0            WQPG(L) = 0.0
CWQSKE0            WQPM(L) = 0.0
CWQSKE0          ENDIF
CWQSKE0        ENDIF
C
C----------------------------------------------------------------------C
C
C ALGAL BASAL METABOLISM & PREDATION
C
        WQBMC(L) = WQBMRC(IMWQZT(L)) * WQTDRC(IWQT(L))
        WQPRC(L) = WQPRRC(IMWQZT(L)) * WQTDRC(IWQT(L))
C MRM: 06/20/98
C THE VARIABLE WQTDGP ADJUSTS PREDATION AND BASAL METABOLISM BASED ON A
C LOWER/UPPER OPTIMUM TEMPERATURE FUNCTION.  THIS WILL ALLOW DIATOMS TO
C BLOOM IN WINTER IF WQTDGP IS CLOSE TO ZERO.
C        WQBMD(L) = WQBMRD(IMWQZT(L)) * WQTDRD(IWQT(L))
C        WQPRD(L) = WQPRRD(IMWQZT(L)) * WQTDRD(IWQT(L))
CWQSKE0        WQBMD(L) = WQBMRD(IMWQZT(L)) * WQTDRD(IWQT(L)) * WQTDGP(IWQT(L))
CWQSKE0        WQPRD(L) = WQPRRD(IMWQZT(L)) * WQTDRD(IWQT(L)) * WQTDGP(IWQT(L))
CWQSKE0        WQBMG(L) = WQBMRG(IMWQZT(L)) * WQTDRG(IWQT(L))
CWQSKE0        WQPRG(L) = WQPRRG(IMWQZT(L)) * WQTDRG(IWQT(L))
C
C MODIFIED BY J.S.(5/5/98) FOR MACALGAE
C
CWQSKE0      IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQBMM(L) = WQBMRM(IMWQZT(L)) * WQTDRM(IWQT(L))
CWQSKE0        WQPRM(L) = WQPRRM(IMWQZT(L)) * WQTDRM(IWQT(L))
CWQSKE0      ENDIF
C
C J.S.
C
C----------------------------------------------------------------------C
C
C4-6 ORGANIC CARBON: WQAANOX=WQAANOX*WQKHORDO
C
        WQOBTOT = WQVO(L,K,1)+WQVO(L,K,2)+WQVO(L,K,3)
        WQKRPC(L) = (WQKRC + WQKRCALG*WQOBTOT) * WQTDHDR(IWQT(L))
        WQKLPC(L) = (WQKLC + WQKLCALG*WQOBTOT) * WQTDHDR(IWQT(L))
        XMRM = 0.0
        IF(IDNOTRVA.GT.0 .AND. K.EQ.1)THEN
          XMRM = WQKDCALM(IZ) * WQVO(L,K,IDNOTRVA)
        ENDIF
C
C M. MORTON 08/28/99: ADDED SPATIALLY VARIABLE DOC HYDROLYSIS RATE WQKDC(IZ)
C    TO ACHIEVE BETTER CONTROL IN SYSTEMS WITH A COMBINATION OF FRESHWATER
C    STREAMS AND TIDAL RIVERS WITH DIFFERENT CHARACTERISTICS.
C
        WQKDOC = (WQKDC(1) + WQKDCALG*WQOBTOT + XMRM)*WQTDMNL(IWQT(L))
        O2WQ = MAX(WQVO(L,K,19), 0.0)
        WQTT1 = WQKDOC / (WQKHORDO + O2WQ+ 1.E-18)
        WQKHR(L) = WQTT1 * O2WQ
CWQSKE0        WQDENIT(L) = WQTT1 * WQAANOX * RNO3WQ/(WQKHDNN+RNO3WQ+ 1.E-18)
        WQDENIT(L) = 0.0
C
C----------------------------------------------------------------------C
C
C 7-10 PHOSPHORUS
C
CWQSKE0        WQAPC(L) = 1.0 / (WQCP1PRM + WQCP2PRM*EXP(-WQCP3PRM*PO4DWQ))
CWQSKE0        WQKHP = (WQKHPC+WQKHPD+WQKHPG) / 3.0
CWQSKE0        WQTT1 = WQKHP / (WQKHP+PO4DWQ+ 1.E-18) * WQOBTOT
CWQSKE0        WQKRPP(L) = (WQKRP + WQKRPALG*WQTT1) * WQTDHDR(IWQT(L))
CWQSKE0        WQKLPP(L) = (WQKLP + WQKLPALG*WQTT1) * WQTDHDR(IWQT(L))
CWQSKE0        WQKDOP(L) = (WQKDP + WQKDPALG*WQTT1) * WQTDMNL(IWQT(L))
C
C----------------------------------------------------------------------C
C
C10 PO4T
C
CWQSKE0        IF(IWQSRP.EQ.1)THEN
CWQSKE0          WQTTM = WQKPO4P*WQTAMP(L,K)
CWQSKE0          WQH10(L) = - WQWSSET(L,1) * WQTTM / (1.0+WQTTM)
CWQSKE0          IF(K.NE.KC)THEN
CWQSKE0            WQTTM = WQKPO4P*WQTAMP(L,K+1)
CWQSKE0            WQT10(L) = WQWSSET(L,2) * WQTTM / (1.0+WQTTM)
CWQSKE0          ENDIF
CWQSKE0         ELSE IF(IWQSRP.EQ.2)THEN
CWQSKE0          WQTTS = WQKPO4P*SEDT(L,K)
CWQSKE0          WQH10(L) = - WSEDO(NS) * WQTTS * DZWQ(L) / (1.0+WQTTS)
CWQSKE0          IF(K.NE.KC)THEN
CWQSKE0            WQTTS = WQKPO4P*SEDT(L,K)
CWQSKE0            WQT10(L) = WSEDO(NS) * WQTTS * DZWQ(L) / (1.0+WQTTS)
CWQSKE0          ENDIF
CWQSKE0         ELSE
CWQSKE0          WQH10(L) = 0.0
CWQSKE0          WQT10(L) = 0.0
CWQSKE0        ENDIF
C
C----------------------------------------------------------------------C
C
C 11-15 NITROGEN
C
        WQKHN = (WQKHNC+WQKHND+WQKHNG) / 3.0
        WQTT1 = WQKHN / (WQKHN+RNH4NO3+ 1.E-18) * WQOBTOT
CWQSKE0        WQKRPN(L) = (WQKRN + WQKRNALG*WQTT1) * WQTDHDR(IWQT(L))
CWQSKE0        WQKLPN(L) = (WQKLN + WQKLNALG*WQTT1) * WQTDHDR(IWQT(L))
CWQSKE0        WQKDON(L) = (WQKDN + WQKDNALG*WQTT1) * WQTDMNL(IWQT(L))
C
C14 NH4: WQFTNIT=WQNITM*WQFTNIT
C
        IF(RNH4NO3.EQ.0.0)THEN
          WQPNC(L)=0.0
          WQPND(L)=0.0
          WQPNG(L)=0.0
          WQPNM(L)=0.0
        ELSE
          WQTTC = RNH4WQ/(WQKHNC+RNO3WQ+ 1.E-18)
          WQTTD = RNH4WQ/(WQKHND+RNO3WQ+ 1.E-18)
          WQTTG = RNH4WQ/(WQKHNG+RNO3WQ+ 1.E-18)
          WQTTM = RNH4WQ/(WQKHNM+RNO3WQ+ 1.E-18)
          WQPNC(L) = (RNO3WQ/(WQKHNC+RNH4WQ+ 1.E-18)
     &              + WQKHNC/(RNH4NO3+ 1.E-18)) * WQTTC
          WQPND(L) = (RNO3WQ/(WQKHND+RNH4WQ+ 1.E-18)
     &              + WQKHND/(RNH4NO3+ 1.E-18)) * WQTTD
          WQPNG(L) = (RNO3WQ/(WQKHNG+RNH4WQ+ 1.E-18)
     &              + WQKHNG/(RNH4NO3+ 1.E-18)) * WQTTG
          WQPNM(L) = (RNO3WQ/(WQKHNM+RNH4WQ+ 1.E-18)
     &              + WQKHNM/(RNH4NO3+ 1.E-18)) * WQTTM

        ENDIF
        WQNIT(L) = WQTDNIT(IWQT(L))*WQVO(L,K,19)/(WQKHNDO+WQVO(L,K,19)      ! DSI
     &       + 1.E-18) * WQVO(L,K,14) / (WQKHNN + WQVO(L,K,14) + 1.E-18)
C
C----------------------------------------------------------------------C
C
C16-17 SILICA
C
CWQSKE0        IF(IWQSI.EQ.1)THEN
CWQSKE0          IF(IWQSRP.EQ.1)THEN
CWQSKE0            WQTTM = WQKSAP*WQTAMP(L,K)
CWQSKE0            WQN17(L) = - WQWSSET(L,1) * WQTTM / (1.0+WQTTM)
CWQSKE0            IF(K.NE.KC)THEN
CWQSKE0              WQTTM = WQKSAP*WQTAMP(L,K+1)
CWQSKE0              WQT17(L) = WQWSSET(L,2) * WQTTM / (1.0+WQTTM)
CWQSKE0            ENDIF
CWQSKE0           ELSE IF(IWQSRP.EQ.2)THEN
CWQSKE0            WQTTS = WQKSAP*SEDT(L,K)
CWQSKE0            WQN17(L) = - WSEDO(NS) * WQTTS * DZWQ(L) / (1.0+WQTTS)
CWQSKE0            IF(K.NE.KC)THEN
CWQSKE0              WQTTS = WQKSAP*SEDT(L,K+1)
CWQSKE0              WQT17(L) = WSEDO(NS) * WQTTS * DZWQ(L) / (1.0+WQTTS)
CWQSKE0            ENDIF
CWQSKE0           ELSE
CWQSKE0            WQN17(L) = 0.0
CWQSKE0            WQT17(L) = 0.0
CWQSKE0            ENDIF
CWQSKE0        ENDIF
C
C 04/29/99 MRM:
C THE FOLLOWING ARRAYS WERE ADDED TO KEEP TRACK OF THE VARIOUS COMPONENTS
C OF DISSOLVED OXYGEN.  THE INSTANTANEOUS VALUES FOR EACH COMPONENT ARE
C SUMMED IN THE ARRAYS AND THEN DUMPED TO THE WQDOCOMP.BIN FILE AT THE
C SAME TIME INTERVAL AS FOR THE WQWCAVG.BIN FILES (I.E., IWQTSDT INTERVALS,
C USUALLY DAILY AVERAGES).  THE ARRAY DESCRIPTIONS ARE:
C  
C  XDOSAT(L,K) = D.O. SATURATION FOR CELL L, LAYER K (MG/L)
C  XDODEF(L,K) = D.O. DEFICIT FOR CELL L, LAYER K (MG/L)
C  XDOPSL(L,K) = D.O. COMPONENT FOR EXTERNAL LOADS (MG/L/DAY)
C  XDOSOD(L,K) = D.O. COMPONENT FOR SEDIMENT OXYGEN DEMAND
C  XDOKAR(L,K) = D.O. COMPONENT FOR REAERATION
C  XDODOC(L,K) = D.O. COMPONENT FOR DISS. ORG. CARBON DECAY
C  XDONIT(L,K) = D.O. COMPONENT FOR AMMONIA NITRIFICATION
C  XDOCOD(L,K) = D.O. COMPONENT FOR CHEM. OXY. DEMAND OXIDATION
C  XDOPPB(L,K) = D.O. COMPONENT FOR PHOTOSYNTHESIS OF TOTAL CHLOROPHYLL
C  XDORRB(L,K) = D.O. COMPONENT FOR RESPIRATION OF TOTAL CHLOROPHYLL
C  XDOPPM(L,K) = D.O. COMPONENT FOR PHOTOSYNTHESIS OF MACROALGAE
C  XDORRM(L,K) = D.O. COMPONENT FOR RESPIRATION OF MACROALGAE
C  XDOALL(L,K) = SUM OF THE ABOVE 10 D.O. COMPONENTS
C  XDODZ (L,K) = LAYER THICKNESS (METERS)
C  NLIM = COUNTER FOR NUMBER OF ITEMS SUMMED IN EACH ARRAY SLOT
C
C----------------------------------------------------------------------C
C
C18-19 COD, O2: WQO18(L)=DTWQO2*WQO18, WQKRDOS(L)=-WQP19(L)*WQDOS
C
CWQSKE0        WQO18(L)= -DTWQO2*WQKCOD(IWQT(L),IZ)*O2WQ /
CWQSKE0     +             (WQKHCOD(IZ) + O2WQ + 1.E-18)
C
C TT THE FOLLOWING MODIFICATION TO THE D.O. SATURATION CALCULATION MADE
C TT BY J.M. HAMRICK / M.R. MORTON ON 03/08/97.  SEE CHAPRA (1997) PG. 361-364.
C
        TVAL1=1./(TWQ(L)+273.15)
        TVAL2=TVAL1*TVAL1
        TVAL3=TVAL1*TVAL2
        TVAL4=TVAL2*TVAL2
        RLNSAT1=-139.3441+(1.575701E+5*TVAL1)-(6.642308E+7*TVAL2)
     &                   +(1.2438E+10*TVAL3)-(8.621949E+11*TVAL4)
        RLNSAT2=RLNSAT1-SWQ(L)*( 1.7674E-2-(1.0754E+1*TVAL1)
     &                           +(2.1407E+3*TVAL2) )
        WQDOS(L) = EXP(RLNSAT2)
        XDOSAT(L,K) = XDOSAT(L,K) + WQDOS(L)*DTWQ*DZC(K)*HP(L)
C
        IF(K.EQ.KC)THEN
C MRM: 06/20/98
C IN THE FOLLOWING EQUATION, SALINITY MUST BE IN MG/L, HENCE, SWQ(L)
C IS MULTIPLIED BY 1000.
C        TVAL1 = TWQ(L)
C        TVAL2 = TVAL1*TVAL1
C        WQDOS = 14.5532 -  0.38217*TVAL1 + 5.4258E-3*TVAL2 -
C     *     (SWQ(L)*1000.0/1.80655) * (1.665E-4 - 5.866E-6*TVAL1 +
C     *     9.796E-8*TVAL2)
CTT          WQDOS = 1.45532E1 + (5.4258E-3*TWQ(L)- 3.8217E-1)*TWQ(L) -
CTT  *  (SWQ(L)/1.80655)
CTT  &           * ( 1.665E-4 + (9.796E-8*TWQ(L) - 5.866E-6)*TWQ(L) )
CTT  UNCOMMENT AND CHANGE LINE BELOW TO ACTIVATE WIND EFFECT ON REAREATION
C
C----------------------------------------------------------------------C
C
C MRM: 06/20/98
C DO NOT ALLOW WIND SPEEDS ABOVE 11 M/SEC IN THE FOLLOWING EQUATION:
        WINDREA = WINDST(L)
        WQWREA = 0.728*SQRT(WINDREA) + (0.0372*WINDREA - 0.317)*WINDREA
C        WQWREA = 0.728*SQRT(WINDST(L))
C     &           +(0.0372*WINDST(L) - 0.317)*WINDST(L)
CTT       WQWREA = 0.0
C
C J.S. 2/21/99 CORRECT SURFACE VELOCITY
C          WQP19(L) = - (WQKRO*SQRT(U(L,KC)**2+V(L,KC)**2) + WQWREA)
C          WQP19(L) = - (WQKRO*SQRT(0.5) + WQWREA) * DZWQ(L)
C     *      * WQTDKR(IWQT(L))
C
C MRM 04/29/1999  USER SPECIFIES CONSTANT REAERATION WQKRO:
C
          IF(IWQKA(IZ) .EQ. 0)THEN
            WQVREA = WQKRO(IZ)
            WQWREA = 0.0
          ENDIF
C
C MRM 04/12/1999  CONSTANT REAERATION DUE TO WATER VELOCITY,
C                 WIND VELOCITY COMPUTED ABOVE:
C
          IF(IWQKA(IZ) .EQ. 1)THEN
            WQVREA = WQKRO(IZ)
          ENDIF
C
C MRM 03/06/1999  O'CONNOR-DOBBINS (1958) EQUATION FOR REAERATION IS:
C    WQKRO = 3.933 TYPICALLY
C
          IF(IWQKA(IZ) .EQ. 2)THEN
C            XMRM = SQRT(U(L,K)*U(L,K) + V(L,K)*V(L,K))
            UMRM = 0.5*(U(L,K)+U(L+1,K))
            VMRM = 0.5*(V(L,K)+V(LNC(L),K))
            XMRM = SQRT(UMRM*UMRM + VMRM*VMRM)
            WQVREA = WQKRO(IZ) * XMRM**0.5 / HP(L)**0.5
          ENDIF
C
C MRM 04/12/1999  OWENS AND GIBBS (1964) REAERATION EQUATION:
C    WQKRO = 5.32 TYPICALLY
C
          IF(IWQKA(IZ) .EQ. 3)THEN
C            XMRM = SQRT(U(L,K)*U(L,K) + V(L,K)*V(L,K))
            UMRM = MAX(U(L,K), U(L+1,K))
            VMRM = MAX(V(L,K), V(LNC(L),K))
            XMRM = SQRT(UMRM*UMRM + VMRM*VMRM)
            WQVREA = WQKRO(IZ) * XMRM**0.67 / HP(L)**1.85
          ENDIF
C
C MODIFIED OWENS AND GIBBS REAERATION EQUATION:
C NOTE: NORMALIZED TO A DEPTH OF 1.0 FT, I.E., THIS EQUATION GIVES THE
C       SAME REAERATION AS OWENS & GIBBS AT 1.0 FT DEPTH; AT HIGHER
C       DEPTHS IT GIVES LARGER REAERATION THAN OWENS & GIBBS.
C WQKRO = 5.32 TYPICALLY
C
              IF(IWQKA(IZ) .EQ. 4)THEN
C                XMRM = XMRM * SQRT(HP(L))/0.3048
C                XMRM = SQRT(U(L,K)*U(L,K) + V(L,K)*V(L,K))
                UMRM = MAX(U(L,K), U(L+1,K))
                VMRM = MAX(V(L,K), V(LNC(L),K))
                XMRM = SQRT(UMRM*UMRM + VMRM*VMRM)
                YMRM = HP(L)*3.0*(1.0 - HP(L)/(HP(L)+0.1524))
                WQVREA = WQKRO(IZ) * XMRM**0.67 / YMRM**1.85
              ENDIF
C
              IF(IWQKA(IZ) .EQ. 5)THEN
                UMRM = MAX(U(L,K), U(L+1,K))
                VMRM = MAX(V(L,K), V(LNC(L),K))
                XMRM = SQRT(UMRM*UMRM + VMRM*VMRM)
                WQVREA = 3.7*XMRM
              ENDIF
C
C
C NOW COMBINE REAERATION DUE TO WATER VELOCITY AND WIND STRESS:
C
          WQVREA = WQVREA * REAC(IZ)
          WQWREA = WQWREA * REAC(IZ)
          WQP19(L) = - (WQVREA + WQWREA) * DZWQ(L)* WQTDKR(IWQT(L),IZ)
          WQKRDOS(L) = - WQP19(L)*WQDOS(L)
C
C        IF(L.EQ.LTEST.AND.IIITEST.EQ.1)THEN
C          WRITE(1,1414)K,WQVREA,WQWREA,DZWQ(L),WQTDKR(IWQT(L),IZ),
C     &    WQDOS(L),WQP19(L),WQKRDOS(L)
C        ENDIF
C
        ELSE
          WQP19(L) = 0.0
        ENDIF
C
  666 FORMAT(' K,IWQ,IZ,WQTDKR = ',3I5,E12.4)
C
C----------------------------------------------------------------------C
C
C20 TAM: WQTDTAM=WQKHBMF*BFTAM*EXP()
C
CWQSKE0        IF(IWQSRP.EQ.1)THEN
CWQSKE0          WQR20(L) = (WQWDSL(L,K,20)+WQWPSL(L,K,20))*VOLWQ(L)
CWQSKE0     *      + (WQVO(L,K,20) - WQTAMP(L,K)) * WQWSSET(L,1)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0          IF(K.EQ.KC)THEN
CWQSKE0            WQR20(L) = WQR20(L) + WQATML(L,KC,20) * VOLWQ(L)
CWQSKE0          ENDIF
CWQSKE0          IF(K.EQ.1) WQR20(L) = WQR20(L)
CWQSKE0     *      + WQTDTAM(IWQT(L))*DZWQ(L)/(WQKHBMF+O2WQ+ 1.E-18)
CWQSKE0          IF(K.NE.KC) WQR20(L) = WQR20(L)
CWQSKE0     *      + (WQVO(L,K+1,20) - WQTAMP(L,K+1)) * WQWSSET(L,2)
CWQSKE0        ENDIF
C
       ENDDO
C
C----------------------------------------------------------------------C
C----------------------------------------------------------------------C
C
C TRAPEZOIDAL SOLUTION OF KINETIC EQS: AFTER COMPUTING NEW VALUES, STORE
C WQVO+WQV INTO WQVO(L,K,NWQV)
C
C MODIFIED BY J.S.(5/5/98) FOR MACALGAE
C
CWQSKE0      IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0       DO L=2,LA
CWQSKE0        WQA1C = (WQPM(L) - WQBMM(L) - WQPRM(L)-WQWSM*DZWQ(L))*DTWQO2
CWQSKE0        WQVA1C = 1.0 / (1.0 - WQA1C)
CWQSKE0        WQV(L,K,IDNOTRVA)=(WQVO(L,K,IDNOTRVA)+WQA1C*WQVO(L,K,IDNOTRVA))
CWQSKE0     *                   *WQVA1C*SMAC(L)
CWQSKE0        WQV(L,K,IDNOTRVA) = MAX(WQV(L,K,IDNOTRVA),WQMCMIN)*SMAC(L)
CWQSKE0        WQVO(L,K,IDNOTRVA) = WQVO(L,K,IDNOTRVA)+WQV(L,K,IDNOTRVA)
CWQSKE0       ENDDO
CWQSKE0      ENDIF
C J.S
C
C----------------------------------------------------------------------C
C
C1 BC: WQT1C=WQBCSET(L,2)
C
CWQSKE0       DO L=2,LA
CWQSKE0        WQA1C = (WQPC(L) - WQBMC(L) - WQPRC(L) - WQBCSET(L,1))*DTWQO2
CWQSKE0        WQKK(L) = 1.0 / (1.0 - WQA1C)
CWQSKE0        WQR1C = (WQWDSL(L,K,1) + WQWPSL(L,K,1)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR1C = WQR1C + WQATML(L,KC,1) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,1) + DTWQ*WQR1C + WQA1C*WQVO(L,K,1)
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQBCSET(L,2)*WQVO(L,K+1,1)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,1)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,1)
CTT        WQV(L,K,1) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,1) = WQVO(L,K,1)+WQV(L,K,1)
C
C----------------------------------------------------------------------C
C
C2 BD: WQT2D=WQBDSET(L,2)
C
CWQSKE0        WQA2D = (WQPD(L) - WQBMD(L) - WQPRD(L) - WQBDSET(L,1))*DTWQO2
CWQSKE0        WQKK(L) = 1.0 / (1.0 - WQA2D)
CWQSKE0        WQR2D = (WQWDSL(L,K,2) + WQWPSL(L,K,2)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR2D = WQR2D + WQATML(L,KC,2) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,2) + DTWQ*WQR2D + WQA2D*WQVO(L,K,2)
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQBDSET(L,2)*WQVO(L,K+1,2)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,2)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,2)
CTT        WQV(L,K,2) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,2) = WQVO(L,K,2)+WQV(L,K,2)
C
C----------------------------------------------------------------------C
C
C3 BG: WQT3D=WQBGSET(L,2)
C
CWQSKE0        WQA3G = (WQPG(L) - WQBMG(L) - WQPRG(L) - WQBGSET(L,1))*DTWQO2
CWQSKE0        WQKK(L) = 1.0 / (1.0 - WQA3G)
CWQSKE0        WQR3G = (WQWDSL(L,K,3) + WQWPSL(L,K,3)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR3G = WQR3G + WQATML(L,KC,3) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,3) + DTWQ*WQR3G + WQA3G*WQVO(L,K,3)
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQBGSET(L,2)*WQVO(L,K+1,3)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,3)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,3)
CTT        WQV(L,K,3) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,3) = WQVO(L,K,3)+WQV(L,K,3)
C
C----------------------------------------------------------------------C
C
C4 RPOC: WQA4=WQRR(L),WQT4=WQRPSET(L,2)
C
CWQSKE0        WQB4 = - (WQKRPC(L)+WQRPSET(L,1))
CWQSKE0        WQKK(L) = 1.0 / (1.0 - DTWQO2*WQB4)
CWQSKE0        WQA4 = WQFCRP * (WQPRC(L)*WQVO(L,K,1)
CWQSKE0     *     + WQPRD(L)*WQVO(L,K,2) + WQPRG(L)*WQVO(L,K,3))
C
C ADD MACALGAL SOURCE     J.S.
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQA4 = WQA4+WQFCRPM*WQPRM(L)*WQVO(L,K,IDNOTRVA)
CWQSKE0      ENDIF
C J.S.
CWQSKE0        WQR4 = (WQWDSL(L,K,4) + WQWPSL(L,K,4)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR4 = WQR4 + WQATML(L,KC,4) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,4) + DTWQ*WQR4 + DTWQO2*( WQA4
CWQSKE0     *    + WQB4*WQVO(L,K,4) )
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQRPSET(L,2)*WQVO(L,K+1,4)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,4)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,4)
CTT        WQV(L,K,4) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,4) = WQVO(L,K,4)+WQV(L,K,4)
C
C----------------------------------------------------------------------C
C
C5 LPOC: WQT5=WQLPSET(L,2)
C
CWQSKE0        WQC5 = - (WQKLPC(L)+WQLPSET(L,1))
CWQSKE0        WQKK(L) = 1.0 / (1.0 - DTWQO2*WQC5)
CWQSKE0        WQA5 = WQFCLP * (WQPRC(L)*WQVO(L,K,1)
CWQSKE0     *    + WQPRD(L)*WQVO(L,K,2) + WQPRG(L)*WQVO(L,K,3))
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQA5 =WQA5 + WQFCLPM * WQPRM(L)*WQVO(L,K,IDNOTRVA)
CWQSKE0      ENDIF
C J.S.
CWQSKE0        WQR5 = (WQWDSL(L,K,5) + WQWPSL(L,K,5)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR5 = WQR5 + WQATML(L,KC,5) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,5) + DTWQ*WQR5 + DTWQO2*( WQA5
CWQSKE0     *    + WQC5*WQVO(L,K,5) )
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQLPSET(L,2)*WQVO(L,K+1,5)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
       DO L=2,LA
         IZ=IWQZMAP(L,K)
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,5)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,5)
CTT        WQV(L,K,5) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,5) = WQVO(L,K,5)+WQV(L,K,5)
C
C----------------------------------------------------------------------C
C
C6 DOC: CFCDXWQ=1-WQFCDX, WQB6=WQKRPC(L),WQC6=WQKLPC(L)
C
CWQSKE0        WQD6 = - (WQKHR(L)+WQDENIT(L))
        WQD6 = - WQKHR(L)
CWQSKE0
        WQKK(L) = 1.0 / (1.0 - DTWQO2*WQD6)
CWQSKE0        O2WQ = MAX(WQVO(L,K,19), 0.0)
CWQSKE0        WQA6C=(WQFCDC+CFCDCWQ*WQKHRC/(WQKHRC+O2WQ+ 1.E-18))*WQBMC(L)
CWQSKE0        WQA6D=(WQFCDD+CFCDDWQ*WQKHRD/(WQKHRD+O2WQ+ 1.E-18))*WQBMD(L)
CWQSKE0        WQA6G=(WQFCDG+CFCDGWQ*WQKHRG/(WQKHRG+O2WQ+ 1.E-18))*WQBMG(L)
CWQSKE0        WQA6 = ( WQA6C + WQFCDP*WQPRC(L) )*WQVO(L,K,1)
CWQSKE0     *         + ( WQA6D + WQFCDP*WQPRD(L) )*WQVO(L,K,2)
CWQSKE0     *         + ( WQA6G + WQFCDP*WQPRG(L) )*WQVO(L,K,3)
CWQSKE0
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0       WQA6M=(WQFCDM+(1-WQFCDM)*WQKHRM(IZ) / 
CWQSKE0     +       (WQKHRM(IZ) + O2WQ + 1.E-18))*WQBMM(L)
CWQSKE0       WQA6 =WQA6+ (WQA6M+ WQFCDPM*WQPRM(L))*WQVO(L,K,IDNOTRVA)
CWQSKE0      ENDIF
CWQSKE0C J.S.
C
        WQR6 = (WQWDSL(L,K,6) + WQWPSL(L,K,6)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR6 = WQR6 + WQATML(L,KC,6) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,6) + DTWQ*WQR6 + DTWQO2*( WQA6 + WQKRPC(L)*
CWQSKE0     *    WQVO(L,K,4) + WQKLPC(L)*WQVO(L,K,5) + WQD6*WQVO(L,K,6) )
        WQRR(L) = WQVO(L,K,6) + DTWQ*WQR6 +  DTWQO2*WQD6*WQVO(L,K,6)
CWQSKE0
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
        WQV(L,K,6)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,6)
C
C
CTT        WQV(L,K,6) = WQRR(L)*WQKK(L)
        WQVO(L,K,6) = WQVO(L,K,6)+WQV(L,K,6)
C
C----------------------------------------------------------------------C
C
C7 RPOP: WQT7=WQT4=WQRPSET(L,2)
C
CWQSKE0        WQE7 = - (WQKRPP(L)+WQRPSET(L,1))
CWQSKE0        WQKK(L) = 1.0 / (1.0 - DTWQO2*WQE7)
CWQSKE0        WQA7C = (WQFPRC*WQBMC(L) + WQFPRP*WQPRC(L)) * WQVO(L,K,1)
CWQSKE0        WQA7D = (WQFPRD*WQBMD(L) + WQFPRP*WQPRD(L)) * WQVO(L,K,2)
CWQSKE0        WQA7G = (WQFPRG*WQBMG(L) + WQFPRP*WQPRG(L)) * WQVO(L,K,3)
CWQSKE0        WQA7 = (WQA7C+WQA7D+WQA7G) * WQAPC(L)
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQA7 = WQA7 + (WQFPRM*WQBMM(L) + WQFPRPM*WQPRM(L))
CWQSKE0     *         * WQVO(L,K,IDNOTRVA)* WQAPC(L)*WQAPCM
CWQSKE0
CWQSKE0      ENDIF
C J.S.
CWQSKE0        WQR7 = (WQWDSL(L,K,7) + WQWPSL(L,K,7)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR7 = WQR7 + WQATML(L,KC,7) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,7) + DTWQ*WQR7 + DTWQO2*( WQA7
CWQSKE0     *     + WQE7*WQVO(L,K,7) )
       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQRPSET(L,2)*WQVO(L,K+1,7)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,7)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,7)
CTT        WQV(L,K,7) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,7) = WQVO(L,K,7)+WQV(L,K,7)
C
C----------------------------------------------------------------------C
C
C8 LPOP: WQT8=WQT5=WQLPSET(L,2)
C
CWQSKE0        WQF8 = - (WQKLPP(L)+WQLPSET(L,1))
CWQSKE0        WQKK(L) = 1.0 / (1.0 - DTWQO2*WQF8)
CWQSKE0        WQA8C = (WQFPLC*WQBMC(L) + WQFPLP*WQPRC(L)) * WQVO(L,K,1)
CWQSKE0        WQA8D = (WQFPLD*WQBMD(L) + WQFPLP*WQPRD(L)) * WQVO(L,K,2)
CWQSKE0        WQA8G = (WQFPLG*WQBMG(L) + WQFPLP*WQPRG(L)) * WQVO(L,K,3)
CWQSKE0        WQA8 = (WQA8C+WQA8D+WQA8G) * WQAPC(L)
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0       WQA8 = WQA8 +     (WQFPLM*WQBMM(L) + WQFPLPM*WQPRM(L))
CWQSKE0     *         * WQVO(L,K,IDNOTRVA)* WQAPC(L)*WQAPCM
CWQSKE0       ENDIF
C J.S.
CWQSKE0        WQR8 = (WQWDSL(L,K,8) + WQWPSL(L,K,8)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR8 = WQR8 + WQATML(L,KC,8) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,8) + DTWQ*WQR8 + DTWQO2*( WQA8
CWQSKE0     *     + WQF8*WQVO(L,K,8) )
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQLPSET(L,2)*WQVO(L,K+1,8)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,8)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,8)
CTT        WQV(L,K,8) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,8) = WQVO(L,K,8)+WQV(L,K,8)
C
C----------------------------------------------------------------------C
C
C9 DOP: WQE9=WQKRPP(L),WQF9=WQKLPP(L),WQG9=-WQKDOP(L)
C
CWQSKE0        WQKK(L) = 1.0 / (1.0 + DTWQO2*WQKDOP(L))
CWQSKE0        WQA9C = (WQFPDC*WQBMC(L) + WQFPDP*WQPRC(L)) * WQVO(L,K,1)
CWQSKE0        WQA9D = (WQFPDD*WQBMD(L) + WQFPDP*WQPRD(L)) * WQVO(L,K,2)
CWQSKE0        WQA9G = (WQFPDG*WQBMG(L) + WQFPDP*WQPRG(L)) * WQVO(L,K,3)
CWQSKE0        WQA9 = (WQA9C+WQA9D+WQA9G) * WQAPC(L)
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0       WQA9 = WQA9 + (WQFPDM*WQBMM(L) + WQFPDPM*WQPRM(L))
CWQSKE0     *       * WQVO(L,K,IDNOTRVA) * WQAPC(L)*WQAPCM
CWQSKE0       ENDIF
C J.S.
CWQSKE0        WQR9 = (WQWDSL(L,K,9) + WQWPSL(L,K,9)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR9 = WQR9 + WQATML(L,KC,9) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,9) + DTWQ*WQR9 + DTWQO2*(WQA9 + WQKRPP(L)*
CWQSKE0     *   WQVO(L,K,7) + WQKLPP(L)*WQVO(L,K,8) - WQKDOP(L)*WQVO(L,K,9))
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,9)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,9)
CTT        WQV(L,K,9) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,9) = WQVO(L,K,9)+WQV(L,K,9)
C
C----------------------------------------------------------------------C
C
C10 PO4T: WQG10=WQKDOP(L),WQA10=WQKK(L)
C
CWQSKE0        WQA10C = (WQFPIC*WQBMC(L)+WQFPIP*WQPRC(L)-WQPC(L))*WQVO(L,K,1)
CWQSKE0        WQA10D = (WQFPID*WQBMD(L)+WQFPIP*WQPRD(L)-WQPD(L))*WQVO(L,K,2)
CWQSKE0        WQA10G = (WQFPIG*WQBMG(L)+WQFPIP*WQPRG(L)-WQPG(L))*WQVO(L,K,3)
CWQSKE0        WQKK(L) = (WQA10C+WQA10D+WQA10G) * WQAPC(L)
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQKK(L) =WQKK(L)+(WQFPIM*WQBMM(L)+WQFPIP*WQPRM(L)-WQPM(L))
CWQSKE0     *           *WQVO(L,K,IDNOTRVA) * WQAPC(L)*WQAPCM
CWQSKE0       ENDIF
C J.S.
CWQSKE0        WQRR(L) = (WQWDSL(L,K,10)+WQWPSL(L,K,10)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQRR(L) = WQRR(L) + WQATML(L,KC,10) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.EQ.1)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + WQBFPO4D(L)*DZWQ(L)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CWQSKE0        WQRR(L) = WQVO(L,K,10) + DTWQ*WQRR(L) + DTWQO2*( WQKK(L)
CWQSKE0     *    + WQKDOP(L)*WQVO(L,K,9) + WQH10(L)*WQVO(L,K,10) )
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0          WQRR(L) = WQRR(L) + DTWQO2*WQT10(L)*WQVO(L,K+1,10)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CWQSKE0         WQKK(L) = 1.0 / (1.0 - DTWQO2*WQH10(L))
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,10)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,10)
CTT         WQV(L,K,10) = WQRR(L)*WQKK(L)
CWQSKE0         WQVO(L,K,10) = WQVO(L,K,10)+WQV(L,K,10)
C
C----------------------------------------------------------------------C
C
C11 RPON: WQT11=WQT4=WQRPSET(L,2)
C
CWQSKE0         WQI11 = - (WQKRPN(L)+WQRPSET(L,1))
CWQSKE0         WQKK(L) = 1.0 / (1.0 - DTWQO2*WQI11)
CWQSKE0         WQA11C = (WQFNRC*WQBMC(L)+WQFNRP*WQPRC(L))*WQANCC*WQVO(L,K,1)
CWQSKE0         WQA11D = (WQFNRD*WQBMD(L)+WQFNRP*WQPRD(L))*WQANCD*WQVO(L,K,2)
CWQSKE0         WQA11G = (WQFNRG*WQBMG(L)+WQFNRP*WQPRG(L))*WQANCG*WQVO(L,K,3)
CWQSKE0         WQA11 = WQA11C+WQA11D+WQA11G
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0      WQA11 =WQA11 +     (WQFNRM*WQBMM(L)+WQFNRPM*WQPRM(L))
CWQSKE0     *        *WQANCM*WQVO(L,K,IDNOTRVA)
CWQSKE0      ENDIF
C J.S.
CWQSKE0         WQR11 = (WQWDSL(L,K,11)+WQWPSL(L,K,11)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR11 = WQR11 + WQATML(L,KC,11) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0         WQRR(L) = WQVO(L,K,11) + DTWQ*WQR11 + DTWQO2*( WQA11
CWQSKE0     *     + WQI11*WQVO(L,K,11) )
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0           WQRR(L) = WQRR(L) + DTWQO2*WQRPSET(L,2)*WQVO(L,K+1,11)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,11)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,11)
CTT         WQV(L,K,11) = WQRR(L)*WQKK(L)
CWQSKE0         WQVO(L,K,11) = WQVO(L,K,11)+WQV(L,K,11)
C
C----------------------------------------------------------------------C
C
C12 LPON: WQT12=WQT5=WQLPSET(L,2)
C
CWQSKE0         WQJ12 = - (WQKLPN(L)+WQLPSET(L,1))
CWQSKE0         WQKK(L) = 1.0 / (1.0 - DTWQO2*WQJ12)
CWQSKE0         WQA12C = (WQFNLC*WQBMC(L)+WQFNLP*WQPRC(L))*WQANCC*WQVO(L,K,1)
CWQSKE0         WQA12D = (WQFNLD*WQBMD(L)+WQFNLP*WQPRD(L))*WQANCD*WQVO(L,K,2)
CWQSKE0         WQA12G = (WQFNLG*WQBMG(L)+WQFNLP*WQPRG(L))*WQANCG*WQVO(L,K,3)
CWQSKE0         WQA12 = WQA12C+WQA12D+WQA12G
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0       WQA12 =WQA12 +(WQFNLM*WQBMM(L)+WQFNLPM*WQPRM(L))
CWQSKE0     *      *WQANCM*WQVO(L,K,IDNOTRVA)
CWQSKE0       ENDIF
C J.S.
CWQSKE0         WQR12 = (WQWDSL(L,K,12)+WQWPSL(L,K,12)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR12 = WQR12 + WQATML(L,KC,12) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0         WQRR(L) = WQVO(L,K,12) + DTWQ*WQR12 + DTWQO2*( WQA12
CWQSKE0     *     + WQJ12*WQVO(L,K,12) )
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.NE.KC)THEN
CWQSKE0         DO L=2,LA
CWQSKE0           WQRR(L) = WQRR(L) + DTWQO2*WQLPSET(L,2)*WQVO(L,K+1,12)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
       DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,12)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,12)
CTT        WQV(L,K,12) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,12) = WQVO(L,K,12)+WQV(L,K,12)
C
C----------------------------------------------------------------------C
C
C13 DON: WQI13=WQKRPN(L),WQJ13=WQKLPN(L),WQK13=-WQKDON(L)
C
CWQSKE0        WQKK(L) = 1.0 / (1.0 + DTWQO2*WQKDON(L))
CWQSKE0        WQA13C = (WQFNDC*WQBMC(L)+WQFNDP*WQPRC(L)) *WQANCC*WQVO(L,K,1)
CWQSKE0        WQA13D = (WQFNDD*WQBMD(L)+WQFNDP*WQPRD(L)) *WQANCD*WQVO(L,K,2)
CWQSKE0        WQA13G = (WQFNDG*WQBMG(L)+WQFNDP*WQPRG(L)) *WQANCG*WQVO(L,K,3)
CWQSKE0        WQA13 = WQA13C+WQA13D+WQA13G
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQA13 =WQA13 + (WQFNDM*WQBMM(L)+WQFNDPM*WQPRM(L))
CWQSKE0     *         *WQANCM*WQVO(L,K,IDNOTRVA)
CWQSKE0       ENDIF
C J.S.
CWQSKE0        WQR13 = (WQWDSL(L,K,13) + WQWPSL(L,K,13)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR13 = WQR13 + WQATML(L,KC,13) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0        WQRR(L) = WQVO(L,K,13) + DTWQ*WQR13 + DTWQO2*( WQA13
CWQSKE0     *     + WQKRPN(L)*WQVO(L,K,11) + WQKLPN(L)*WQVO(L,K,12)
CWQSKE0     *     - WQKDON(L)*WQVO(L,K,13) )
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,13)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,13)
CTT        WQV(L,K,13) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,13) = WQVO(L,K,13)+WQV(L,K,13)
C
C----------------------------------------------------------------------C
C
C14 NH4: WQL14=-WQNIT(L),WQK14=WQKDON(L),WQR14=WQRR(L)
C

        WQRR(L) = (WQWDSL(L,K,14)+WQWPSL(L,K,14)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQRR(L) = WQRR(L) + WQATML(L,KC,14) * VOLWQ(L)
CWQSKE0        ENDIF
       ENDDO
C
CWQSKE0       IF(K.EQ.1)THEN
CWQSKE0         DO L=2,LA
CWQSKE0           WQRR(L) = WQRR(L) + WQBFNH4(L)*DZWQ(L)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
       DO L=2,LA
        WQKK(L) = 1.0 / (1.0 + DTWQO2*WQNIT(L))
CWQSKE0        WQA14C = WQFNIC*WQBMC(L) + WQFNIP*WQPRC(L) - WQPNC(L)*WQPC(L)
CWQSKE0        WQA14D = WQFNID*WQBMD(L) + WQFNIP*WQPRD(L) - WQPND(L)*WQPD(L)
CWQSKE0        WQA14G = WQFNIG*WQBMG(L) + WQFNIP*WQPRG(L) - WQPNG(L)*WQPG(L)
CWQSKE0        WQA14 = WQA14C*WQANCC*WQVO(L,K,1)
CWQSKE0     *     + WQA14D*WQANCD*WQVO(L,K,2) + WQA14G*WQANCG*WQVO(L,K,3)
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0              WQA14 = WQA14 + (WQFNIM*WQBMM(L)+WQFNIPM*WQPRM(L)
CWQSKE0     *      - WQPNM(L)*WQPM(L))*WQANCM*WQVO(L,K,IDNOTRVA)
CWQSKE0       ENDIF
C J.S.
CWQSKE0        WQRR(L) = WQVO(L,K,14) + DTWQ*WQRR(L) + DTWQO2*( WQA14
CWQSKE0     *     + WQKDON(L)*WQVO(L,K,13) - WQNIT(L)*WQVO(L,K,14) )
        WQRR(L) = WQVO(L,K,14) + DTWQ*WQRR(L)
     &         - DTWQO2*( WQNIT(L)*WQVO(L,K,14) )
CWQSKE0
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
        WQV(L,K,14)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,14)
CTT        WQV(L,K,14) = WQRR(L)*WQKK(L)
        WQVO(L,K,14) = WQVO(L,K,14)+WQV(L,K,14)
C
C----------------------------------------------------------------------C
C
C15 NO3: WQKK(L)=1,WQR15=WQRR(L),WQD15=-WQANDC*WQDENIT(L),WQL15=WQNIT(L)
C
CWQSKE0         WQRR(L) = (WQWDSL(L,K,15)+WQWPSL(L,K,15)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQRR(L) = WQRR(L) + WQATML(L,KC,15) * VOLWQ(L)
CWQSKE0        ENDIF
       ENDDO
C
CWQSKE0       IF(K.EQ.1)THEN
CWQSKE0         DO L=2,LA
CWQSKE0           WQRR(L) = WQRR(L) + WQBFNO3(L)*DZWQ(L)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
CWQSKE0       DO L=2,LA
CWQSKE0         WQA15C = (WQPNC(L)-1.0)*WQPC(L) * WQANCC * WQVO(L,K,1)
CWQSKE0         WQA15D = (WQPND(L)-1.0)*WQPD(L) * WQANCD * WQVO(L,K,2)
CWQSKE0         WQA15G = (WQPNG(L)-1.0)*WQPG(L) * WQANCG * WQVO(L,K,3)
CWQSKE0         WQA15 = WQA15C+WQA15D+WQA15G
C
C ADD MACALGAL SOURCE     J.S.
C
CWQSKE0       IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0        WQA15 =WQA15 + (WQPNM(L)-1.0)*WQPM(L)*WQANCM
CWQSKE0     *         *WQVO(L,K,IDNOTRVA)
CWQSKE0       ENDIF
C J.S.
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,15)=SCB(L)*( WQVO(L,K,15) + DTWQ*WQRR(L)
CWQSKE0     *     + DTWQO2*( WQA15
CWQSKE0     *     - WQANDC*WQDENIT(L)*WQVO(L,K,6) + WQNIT(L)*WQVO(L,K,14) ) )
CWQSKE0     *     +(1.-SCB(L))*WQVO(L,K,15)
CTT         WQV(L,K,15) = WQVO(L,K,15) + DTWQ*WQRR(L) + DTWQO2*( WQA15
CTT     *     - WQANDC*WQDENIT(L)*WQVO(L,K,6) + WQNIT(L)*WQVO(L,K,14) )
CWQSKE0         WQVO(L,K,15) = WQVO(L,K,15)+WQV(L,K,15)
CWQSKE0       ENDDO
C
C----------------------------------------------------------------------C
C
C16 SU: WQT16=WQBDSET(L,2)
C
CWQSKE0       IF(IWQSI.EQ.1)THEN
C
CWQSKE0         DO L=2,LA
CWQSKE0           WQM16 = - (WQKSUA(IWQT(L)) + WQBDSET(L,1))
CWQSKE0           WQKK(L) = 1.0 / (1.0 - DTWQO2*WQM16)
CWQSKE0           WQA16D = (WQFSPD*WQBMD(L) + WQFSPP*WQPRD(L)) * WQASCD
CWQSKE0     *       * WQVO(L,K,2)
CWQSKE0           WQR16 = (WQWDSL(L,K,16)+WQWPSL(L,K,16)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQR16 = WQR16 + WQATML(L,KC,16) * VOLWQ(L)
CWQSKE0        ENDIF
CWQSKE0           WQRR(L) = WQVO(L,K,16) + DTWQ*WQR16 + DTWQO2*( WQA16D
CWQSKE0     *       + WQM16*WQVO(L,K,16) )
CWQSKE0         ENDDO
C
CWQSKE0         IF(K.NE.KC)THEN
CWQSKE0           DO L=2,LA
CWQSKE0             WQRR(L) = WQRR(L) + DTWQO2*WQBDSET(L,2)*WQVO(L,K+1,16)
CWQSKE0           ENDDO
CWQSKE0         ENDIF
C
CWQSKE0         DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,16)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,16)
CTT           WQV(L,K,16) = WQRR(L)*WQKK(L)
CWQSKE0           WQVO(L,K,16) = WQVO(L,K,16)+WQV(L,K,16)
C
C----------------------------------------------------------------------C
C
C17 SA: WQM17=WQKSUA(IWQT(L)),WQA17D=WQKK(L)
C
CWQSKE0           WQKK(L) = (WQFSID*WQBMD(L) + WQFSIP*WQPRD(L) - WQPD(L))
CWQSKE0     *       * WQASCD * WQVO(L,K,2)
CWQSKE0           WQRR(L) = (WQWDSL(L,K,17)+WQWPSL(L,K,17)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0           IF(K.EQ.KC)THEN
CWQSKE0             WQRR(L) = WQRR(L) + WQATML(L,KC,17) * VOLWQ(L)
CWQSKE0           ENDIF
CWQSKE0         ENDDO
C
CWQSKE0         IF(K.EQ.1)THEN
CWQSKE0           DO L=2,LA
CWQSKE0             WQRR(L) = WQRR(L) + WQBFSAD(L)*DZWQ(L)
CWQSKE0           ENDDO
CWQSKE0         ENDIF
C
CWQSKE0         DO L=2,LA
CWQSKE0           WQRR(L) = WQVO(L,K,17) + DTWQ*WQRR(L) + DTWQO2*( WQKK(L)
CWQSKE0     *       + WQKSUA(IWQT(L))*WQVO(L,K,16) + WQN17(L)*WQVO(L,K,17) )
CWQSKE0         ENDDO
C
CWQSKE0         IF(K.NE.KC)THEN
CWQSKE0           DO L=2,LA
CWQSKE0             WQRR(L) = WQRR(L) + DTWQO2*WQT17(L)*WQVO(L,K+1,17)
CWQSKE0           ENDDO
CWQSKE0         ENDIF
C
CWQSKE0         DO L=2,LA
CWQSKE0           WQKK(L) = 1.0 / (1.0 - DTWQO2*WQN17(L))
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,17)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,17)
CTT           WQV(L,K,17) = WQRR(L)*WQKK(L)
CWQSKE0           WQVO(L,K,17) = WQVO(L,K,17)+WQV(L,K,17)
CWQSKE0         ENDDO
C
CWQSKE0       ENDIF
C
C----------------------------------------------------------------------C
C
C18 COD: WQO18(L)=DTWQO2*WQO18
C
CWQSKE0       DO L=2,LA
CWQSKE0         WQKK(L) = 1.0 / (1.0 - WQO18(L))
CWQSKE0         WQRR(L) = (WQWDSL(L,K,18)+WQWPSL(L,K,18)) * VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0         IF(K.EQ.KC)THEN
CWQSKE0           WQRR(L) = WQRR(L) + WQATML(L,KC,18) * VOLWQ(L)
CWQSKE0         ENDIF
CWQSKE0       ENDDO
C
CWQSKE0       IF(K.EQ.1)THEN
CWQSKE0         DO L=2,LA
CWQSKE0           WQRR(L) = WQRR(L) + WQBFCOD(L)*DZWQ(L)
CWQSKE0         ENDDO
CWQSKE0       ENDIF
C
       DO L=2,LA
CWQSKE0        WQRR(L) = WQVO(L,K,18) + DTWQ*WQRR(L) + WQO18(L)*WQVO(L,K,18)
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,18)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,18)
CTT        WQV(L,K,18) = WQRR(L)*WQKK(L)
CWQSKE0        WQVO(L,K,18) = WQVO(L,K,18)+WQV(L,K,18)
C
C----------------------------------------------------------------------C
C
C19 O2: WQD19=-WQAOCR*WQKHR(L),WQL19=-WQAONT*WQNIT(L),WQO19=WQO18
C: WQKRDOS(L)=-WQP19(L)*WQDOS
C
        WQKK(L) = 1.0 / (1.0 - DTWQO2*WQP19(L))
        WQRR(L) = (WQWDSL(L,K,19)+WQWPSL(L,K,19)) * VOLWQ(L)
CWQSKE0        XDOPSL(L,K) = XDOPSL(L,K) + WQRR(L)*DTWQ*DZC(K)*HP(L)
CWQSKE0        XDOALL(L,K) = XDOALL(L,K) + WQRR(L)*DTWQ*DZC(K)*HP(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0        IF(K.EQ.KC)THEN
CWQSKE0          WQRR(L) = WQRR(L) + WQATML(L,KC,19) * VOLWQ(L)
CWQSKE0        ENDIF
       ENDDO
C
       IF(K.EQ.KC)THEN
         DO L=2,LA
           WQRR(L) = WQRR(L) + WQKRDOS(L)
         ENDDO
       ENDIF
C
       IF(K.EQ.1)THEN
         DO L=2,LA
           WQRR(L) = WQRR(L) + WQBFO2(L)*DZWQ(L)
CWQSKE0           XDOSOD(L,K) = XDOSOD(L,K) + WQBFO2(L)*DTWQ
CWQSKE0           XDOALL(L,K) = XDOALL(L,K) + WQBFO2(L)*DTWQ
         ENDDO
       ENDIF
C
       DO L=2,LA
CWQSKE0         IZ=IWQZMAP(L,K)
CWQSKE0         O2WQ = MAX(WQVO(L,K,19), 0.0)
CWQSKE0         WQTTC = (1.3 - 0.3*WQPNC(L)) * WQPC(L)
CWQSKE0         WQTTD = (1.3 - 0.3*WQPND(L)) * WQPD(L)
CWQSKE0         WQTTG = (1.3 - 0.3*WQPNG(L)) * WQPG(L)
CWQSKE0         XDOPPB(L,K) = XDOPPB(L,K) + ( WQTTC*WQVO(L,K,1)
CWQSKE0     *     + WQTTD*WQVO(L,K,2) + WQTTG*WQVO(L,K,3) ) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K) = XDOALL(L,K) + ( WQTTC*WQVO(L,K,1)
CWQSKE0     *     + WQTTD*WQVO(L,K,2) + WQTTG*WQVO(L,K,3) ) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0
CWQSKE0         XMRM = CFCDCWQ*O2WQ*WQBMC(L)/(WQKHRC+O2WQ+ 1.E-18)
CWQSKE0         WQA19C = WQTTC - XMRM
CWQSKE0         XDORRB(L,K) = XDORRB(L,K) - XMRM*WQVO(L,K,1) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K) = XDOALL(L,K) - XMRM*WQVO(L,K,1) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XMRM = CFCDDWQ*O2WQ*WQBMD(L)/(WQKHRD+O2WQ+ 1.E-18)
CWQSKE0         WQA19D = WQTTD - XMRM
CWQSKE0         XDORRB(L,K) = XDORRB(L,K) - XMRM*WQVO(L,K,2) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K) = XDOALL(L,K) - XMRM*WQVO(L,K,2) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XMRM = CFCDGWQ*O2WQ*WQBMG(L)/(WQKHRG+O2WQ+ 1.E-18)
CWQSKE0         WQA19G = WQTTG - XMRM
CWQSKE0         XDORRB(L,K) = XDORRB(L,K) - XMRM*WQVO(L,K,3) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K) = XDOALL(L,K) - XMRM*WQVO(L,K,3) * WQAOCR*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         WQA19 = ( WQA19C*WQVO(L,K,1) + WQA19D*WQVO(L,K,2)
CWQSKE0     *     + WQA19G*WQVO(L,K,3) ) * WQAOCR
C
C ADD MACALGAL SOURCE     J.S.
C
C MODIFIED BY MRM 05/23/99 TO ALLOW DIFFERENT AOCR CONSTANTS TO BE APPLIED
C   TO PHOTOSYNTHESIS AND RESPIRATION TERMS FOR MACROALGAE:
C     WQAOCRPM = AOCR APPLIED TO MACROALGAE PHOTOSYNTHESIS TERM
C     WQAOCRRM = AOCR APPLIED TO MACROALGAE RESPIRATION TERM
C
CWQSKE0         IF(IDNOTRVA.GT.0.AND.K.EQ.1)THEN
CWQSKE0           WQTTM = (1.3 - 0.3*WQPNM(L)) * WQPM(L)
CWQSKE0           XMRM = (1.0-WQFCDM)*O2WQ*WQBMM(L)/(WQKHRM(IZ)+O2WQ+ 1.E-18)
C MRM ++++ START NEW CODE
C           WQA19A =  WQTTM - XMRM
C           WQA19 = WQA19 + WQA19A * WQVO(L,K,IDNOTRVA) * WQAOCR
CWQSKE0           WQA19A = WQTTM * WQVO(L,K,IDNOTRVA) * WQAOCRPM -
CWQSKE0     *       XMRM *  WQVO(L,K,IDNOTRVA) * WQAOCRRM
CWQSKE0           WQA19 = WQA19 + WQA19A
C MRM ++++ END NEW CODE
CWQSKE0           XDOPPM(L,K) = XDOPPM(L,K) + 
CWQSKE0     *         WQTTM*WQVO(L,K,IDNOTRVA)*WQAOCRPM*DTWQO2*DZC(K)*HP(L)
CWQSKE0           XDOALL(L,K) = XDOALL(L,K) +
CWQSKE0     *         WQTTM*WQVO(L,K,IDNOTRVA)*WQAOCRPM*DTWQO2*DZC(K)*HP(L)
CWQSKE0           XDORRM(L,K) = XDORRM(L,K) - 
CWQSKE0     *         XMRM*WQVO(L,K,IDNOTRVA)*WQAOCRRM*DTWQO2*DZC(K)*HP(L)
CWQSKE0           XDOALL(L,K) = XDOALL(L,K) -
CWQSKE0     *         XMRM*WQVO(L,K,IDNOTRVA)*WQAOCRRM*DTWQO2*DZC(K)*HP(L)
CWQSKE0         ENDIF
C J.S.
CWQSKE0         WQRR(L) = WQVO(L,K,19) + DTWQ*WQRR(L) + DTWQO2*( WQA19
CWQSKE0     *     - WQAOCR*WQKHR(L)*WQVO(L,K,6) - WQAONT*WQNIT(L)*WQVO(L,K,14)
CWQSKE0     *     + WQP19(L)*WQVO(L,K,19) ) + WQO18(L)*WQVO(L,K,18)
         WQRR(L) = WQVO(L,K,19) + DTWQ*WQRR(L) + DTWQO2*( 
     *     - WQAOCR*WQKHR(L)*WQVO(L,K,6) - WQAONT*WQNIT(L)*WQVO(L,K,14)
     *     + WQP19(L)*WQVO(L,K,19) )
C
C        IF(L.EQ.LTEST.AND.IIITEST.EQ.1)THEN
C          RZERO=0.
C          WRITE(1,1414)K,WQVO(L,K,19),WQRR(L),RZERO,WQKHR(L),
C     &        WQVO(L,K,6),WQNIT(L),WQVO(L,K,14),WQP19(L),WQVO(L,K,19),
C     &        RZERO,RZERO
C        ENDIF
C
CWQSKE0
C MRM     *     + WQO18(L)*WQVO(L,K,18) + WQP19(L)*WQVO(L,K,19) )
C
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
        WQV(L,K,19)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,19)
CTT         WQV(L,K,19) = WQRR(L)*WQKK(L)
C
C MRM DO NOT ALLOW D.O. TO GO NEGATIVE:
C
         WQV(L,K,19) = MAX (WQV(L,K,19), 0.0)
         WQVO(L,K,19) = WQVO(L,K,19)+WQV(L,K,19)
C
C COMPUTE AND SAVE D.O. DEFICIT:
C
CWQSKE0         XMRM = WQDOS(L) - WQV(L,K,19)
CWQSKE0         XDODEF(L,K) = XDODEF(L,K) + XMRM*DTWQ*DZC(K)*HP(L)
CWQSKE0         IF(K.EQ.KC)THEN
CWQSKE0           XDOKAR(L,K) = XDOKAR(L,K) + WQKRDOS(L)*DTWQ*DZC(K)*HP(L) +
CWQSKE0     *        WQP19(L)*WQVO(L,K,19)*DTWQO2*DZC(K)*HP(L)
CWQSKE0           XDOALL(L,K) = XDOALL(L,K) + WQKRDOS(L)*DTWQ*DZC(K)*HP(L) +
CWQSKE0     *        WQP19(L)*WQVO(L,K,19)*DTWQO2*DZC(K)*HP(L)
CWQSKE0         ENDIF
CWQSKE0         XDODOC(L,K)=XDODOC(L,K) - WQAOCR*WQKHR(L)*WQVO(L,K,6)*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K)=XDOALL(L,K) - WQAOCR*WQKHR(L)*WQVO(L,K,6)*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDONIT(L,K)=XDONIT(L,K) - WQAONT*WQNIT(L)*WQVO(L,K,14)*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K)=XDOALL(L,K) - WQAONT*WQNIT(L)*WQVO(L,K,14)*DTWQO2
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0
CWQSKE0         XDOCOD(L,K)=XDOCOD(L,K) - WQO18(L)*WQVO(L,K,18)
CWQSKE0     *     *DZC(K)*HP(L)
CWQSKE0         XDOALL(L,K)=XDOALL(L,K) - WQO18(L)*WQVO(L,K,18)
CWQSKE0     *     *DZC(K)*HP(L)
C MRM         XDOCOD(L,K)=XDOCOD(L,K) - WQO18(L)*WQVO(L,K,18)*DTWQO2
C MRM     *     *DZC(K)*HP(L)
C MRM         XDOALL(L,K)=XDOALL(L,K) - WQO18(L)*WQVO(L,K,18)*DTWQO2
C MRM     *     *DZC(K)*HP(L)
         XDODZ(L,K) = XDODZ(L,K) + DZC(K)*HP(L)
       ENDDO
C
C----------------------------------------------------------------------C
C
C20 TAM: WQQ20=-WQWSSET(L,1),WQT20=WQWSSET(L,2)
C
CWQSKE0       IF(IWQSRP.EQ.1)THEN
C
CWQSKE0         DO L=2,LA
CWQSKE0           WQT20 = - DTWQO2*WQWSSET(L,1)
CWQSKE0           WQKK(L) = 1.0 / (1.0 - WQT20)
CWQSKE0           WQRR(L) = WQVO(L,K,20) + DTWQ*WQR20(L) + WQT20*WQVO(L,K,20)
CWQSKE0         ENDDO
C
CWQSKE0         IF(K.NE.KC)THEN
CWQSKE0           DO L=2,LA
CWQSKE0             WQRR(L) = WQRR(L) + DTWQO2*WQWSSET(L,2)*WQVO(L,K+1,20)
CWQSKE0           ENDDO
CWQSKE0         ENDIF
C
CWQSKE0         DO L=2,LA
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,20)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,20)
CTT           WQV(L,K,20) = WQRR(L)*WQKK(L)
CWQSKE0           WQVO(L,K,20) = WQVO(L,K,20)+WQV(L,K,20)
CWQSKE0         ENDDO
C
CWQSKE0       ENDIF
C
C----------------------------------------------------------------------C
C
C21 FCB: WQTDFCB(IWQT(L))=WQKFCB*WQTFCB**(T-20),S21=-KFCB*TFCB^(T-20)
C WQTD1FCB=1+DTWQO2*WQS21,WQTD2FCB=1/(1-DTWQO2*S21)
C
CWQSKE0       IF(IWQFCB.EQ.1)THEN
C
CWQSKE0         DO L=2,LA
CWQSKE0           WQKK(L) = WQTD2FCB(IWQT(L))
CWQSKE0           WQR21= (WQWDSL(L,K,NWQV)+WQWPSL(L,K,NWQV))*VOLWQ(L)
C MRM  ADD WET ATMOSPHERIC DEPOSITION:
CWQSKE0           IF(K.EQ.KC)THEN
CWQSKE0             WQR21 = WQR21 + WQATML(L,KC,21) * VOLWQ(L)
CWQSKE0           ENDIF
CWQSKE0           WQRR(L) = WQVO(L,K,NWQV)*WQTD1FCB(IWQT(L)) + DTWQ*WQR21
CTT UPDATE MODIFIED NEXT LINE ADDED LINE BELOW COMMENTED OUT
CWQSKE0        WQV(L,K,21)=SCB(L)*( WQRR(L)*WQKK(L) )+(1.-SCB(L))*WQVO(L,K,21)
CTT           WQV(L,K,21) = WQRR(L)*WQKK(L)
CWQSKE0           WQVO(L,K,21) = WQVO(L,K,21)+WQV(L,K,21)
CWQSKE0         ENDDO
C
CWQSKE0       ENDIF
C
C END OF DO K=KC,1,-1  LOOP
C END OF DO ND=1,NDMWQ LOOP
C
      ENDDO
C      ENDDO
C
C      OPEN(1,FILE='WQSKE0.DIA',POSITION='APPEND')
C       WRITE(1,*)'COMPLETE REACTION LOOP'
C      CLOSE(1)
C----------------------------------------------------------------------C
C----------------------------------------------------------------------C
C
C INCREMENT COUNTER FOR LIMITATION AND XDOXXX DO COMPONENT ARRAYS:
C
        IF(ISDYNSTP.EQ.0)THEN
          TIMTMP=DT*FLOAT(N)+TCON*TBEGIN
          TIMTMP=TIMTMP/TCTMSR  
        ELSE
          TIMTMP=TIMESEC/TCTMSR  
        ENDIF
      TIMESUM3 = TIMESUM3 + TIMTMP
      NLIM = NLIM + 1
C
C COMPUTE WQCHL,WQTAMP,WQPO4D,WQSAD AT A NEW TIME STEP: WQCHLX=1/WQCHLX
C
CWQSKE0      DO K=1,KC
CWQSKE0        DO L=2,LA
CWQSKE0          WQCHL(L,K) = WQV(L,K,1)*WQCHLC + WQV(L,K,2)*WQCHLD
CWQSKE0     *      + WQV(L,K,3)*WQCHLG
CWQSKE0        ENDDO
CWQSKE0      ENDDO
CWQSKE0      IF(IWQSRP.EQ.1)THEN
CWQSKE0        DO K=1,KC
CWQSKE0          DO L=2,LA
CWQSKE0            O2WQ = MAX(WQV(L,K,19), 0.0)
CWQSKE0            WQTAMD = MIN( WQTAMDMX*EXP(-WQKDOTAM*O2WQ), WQV(L,K,20) )
CWQSKE0            WQTAMP(L,K) = WQV(L,K,20) - WQTAMD
CWQSKE0            WQPO4D(L,K) = WQV(L,K,10) / (1.0 + WQKPO4P*WQTAMP(L,K))
CWQSKE0            WQSAD(L,K)  = WQV(L,K,17) / (1.0 + WQKSAP*WQTAMP(L,K))
CWQSKE0          ENDDO
CWQSKE0        ENDDO
CWQSKE0       ELSE IF(IWQSRP.EQ.2)THEN
CWQSKE0        DO K=1,KC
CWQSKE0          DO L=2,LA
CWQSKE0            WQPO4D(L,K) = WQV(L,K,10) / (1.0 + WQKPO4P*SEDT(L,K))
CWQSKE0            WQSAD(L,K)  = WQV(L,K,17) / (1.0 + WQKSAP*SEDT(L,K))
CWQSKE0          ENDDO
CWQSKE0        ENDDO
CWQSKE0       ELSE
CWQSKE0        DO K=1,KC
CWQSKE0          DO L=2,LA
CWQSKE0            WQPO4D(L,K) = WQV(L,K,10)
CWQSKE0            WQSAD(L,K)  = WQV(L,K,17)
CWQSKE0          ENDDO
CWQSKE0        ENDDO
CWQSKE0      ENDIF
C
C----------------------------------------------------------------------C
C
C COUPLING TO SEDIMENT MODEL
C: EVALUATE DEP. FLUX USING NEW VALUES CAUSE IMPLICIT SCHEME IS USED IN
C  SPM
C
CWQSKE0      IF(IWQBEN.EQ.1)THEN
C
CWQSKE0       DO ND=1,NDMWQ
CWQSKE0       LF=2+(ND-1)*LDMWQ
CWQSKE0       LL=LF+LDM-1
CWQSKE0       DO L=2,LA
CWQSKE0         IMWQZ = IWQZMAP(L,1)
CWQSKE0         WQDFBC(L) = SCB(L)*WQWSC(IMWQZ)*WQV(L,1,1)
CWQSKE0         WQDFBD(L) = SCB(L)*WQWSD(IMWQZ)*WQV(L,1,2)
CWQSKE0         WQDFBG(L) = SCB(L)*WQWSG(IMWQZ)*WQV(L,1,3)
CWQSKE0     +             +WQWSM*DZWQ(L)*WQV(L,1,IDNOTRVA)
CWQSKE0         WQDFRC(L) = SCB(L)*WQWSRP(IMWQZ)*WQV(L,1,4)
CWQSKE0         WQDFLC(L) = SCB(L)*WQWSLP(IMWQZ)*WQV(L,1,5)
CWQSKE0         WQDFRP(L) = SCB(L)*WQWSRP(IMWQZ)*WQV(L,1,7)
CWQSKE0         WQDFLP(L) = SCB(L)*WQWSLP(IMWQZ)*WQV(L,1,8)
CWQSKE0         WQDFRN(L) = SCB(L)*WQWSRP(IMWQZ)*WQV(L,1,11)
CWQSKE0         WQDFLN(L) = SCB(L)*WQWSLP(IMWQZ)*WQV(L,1,12)
CWQSKE0         IF(IWQSI.EQ.1) WQDFSI(L) = SCB(L)*WQWSD(IMWQZ)*WQV(L,1,16)
CWQSKE0       ENDDO
CWQSKE0       ENDDO
C
CWQSKE0        IF(IWQSRP.EQ.1)THEN
CWQSKE0          DO ND=1,NDMWQ
CWQSKE0          LF=2+(ND-1)*LDMWQ
CWQSKE0          LL=LF+LDM-1
CWQSKE0          DO L=2,LA
CWQSKE0            IMWQZ = IWQZMAP(L,1)
CWQSKE0            WQDFLP(L) = SCB(L)*( WQDFLP(L)
CWQSKE0     *        + WQWSS(IMWQZ)*( WQV(L,1,10)-WQPO4D(L,1) ) )
CWQSKE0            IF(IWQSI.EQ.1) WQDFSI(L) = SCB(L)*( WQDFSI(L)
CWQSKE0     *        + WQWSS(IMWQZ)*( WQV(L,1,17)-WQSAD(L,1) ) )
CWQSKE0          ENDDO
CWQSKE0          ENDDO
CWQSKE0         ELSE IF(IWQSRP.EQ.2)THEN
CWQSKE0          DO ND=1,NDMWQ
CWQSKE0          LF=2+(ND-1)*LDMWQ
CWQSKE0          LL=LF+LDM-1
CWQSKE0          DO L=2,LA
CWQSKE0           WQDFLP(L) = SCB(L)*( WQDFLP(L)+WSEDO(NS)*( WQV(L,1,10)
CWQSKE0     *                         -WQPO4D(L,1) ) )
CWQSKE0           IF(IWQSI.EQ.1) WQDFSI(L) = SCB(L)*( WQDFSI(L)
CWQSKE0     *        + WSEDO(NS)*( WQV(L,1,17)-WQSAD(L,1) ) )
CWQSKE0          ENDDO
CWQSKE0          ENDDO
CWQSKE0        ENDIF
C
CWQSKE0      ENDIF
C
C----------------------------------------------------------------------C
C
C DIURNAL DO ANALYSIS
C
CWQSKE0      IF(NDDOAVG.GE.1)THEN
CWQSKE0        OPEN(1,FILE='DIURNDO.OUT',POSITION='APPEND')
CWQSKE0        NDDOCNT=NDDOCNT+1
CWQSKE0        NSTPTMP=NDDOAVG*NTSPTC/2
CWQSKE0        RMULTMP=1./FLOAT(NSTPTMP)
C
CWQSKE0        DO K=1,KC
CWQSKE0         DO L=2,LA
CWQSKE0          DDOMAX(L,K)=MAX(DDOMAX(L,K),WQV(L,K,19))
CWQSKE0          DDOMIN(L,K)=MIN(DDOMIN(L,K),WQV(L,K,19))
CWQSKE0         ENDDO
CWQSKE0        ENDDO
C
CWQSKE0        IF(NDDOCNT.EQ.NSTPTMP)THEN
CWQSKE0          NDDOCNT=0
CWQSKE0          TIME=DT*FLOAT(N)+TCON*TBEGIN
CWQSKE0          TIME=TIME/TCON
CWQSKE0          WRITE(1,1111)N,TIME
CWQSKE0          DO L=2,LA
CWQSKE0           WRITE(1,1112)IL(L),JL(L),(DDOMIN(L,K),K=1,KC),
CWQSKE0     &                               (DDOMAX(L,K),K=1,KC)
CWQSKE0          ENDDO
CWQSKE0          DO K=1,KC
CWQSKE0           DO L=2,LA
CWQSKE0            DDOMAX(L,K)=-1.E6
CWQSKE0            DDOMIN(L,K)=1.E6
CWQSKE0           ENDDO
CWQSKE0          ENDDO
CWQSKE0        ENDIF
C
CWQSKE0        CLOSE(1)
CWQSKE0      ENDIF
C
C----------------------------------------------------------------------C
C
C LIGHT EXTINCTION ANALYSIS
C
CWQSKE0      IF(NDLTAVG.GE.1)THEN
CWQSKE0        OPEN(1,FILE='LIGHT.OUT',POSITION='APPEND')
CWQSKE0        NDLTCNT=NDLTCNT+1
CWQSKE0        NSTPTMP=NDLTAVG*NTSPTC/2
CWQSKE0        RMULTMP=1./FLOAT(NSTPTMP)
C
CWQSKE0        DO K=1,KC
CWQSKE0         DO L=2,LA
CWQSKE0          RLIGHT1=WQKEB(IMWQZT(L))+WQKETSS*SEDT(L,K)
C
C MRM 05/12/1999 USE RILEY (1956) EQUATION TO COMPUTE LIGHT EXTINCTION
C     AS A FUNCTION OF CHL CONC. IF WQKECHL IS LESS THAN ZERO:
C
C          RLIGHT2=WQKECHL*WQCHL(L,K)
CWQSKE0          XMRM = WQKECHL*WQCHL(L,K)
CWQSKE0          IF(WQKECHL .LT. 0.0)THEN
CWQSKE0            XMRM = 0.054*WQCHL(L,K)**0.6667 + 0.0088*WQCHL(L,K)
CWQSKE0          ENDIF
CWQSKE0          RLIGHT2 = XMRM
CWQSKE0          RLIGHTT(L,K)=RLIGHTT(L,K)+RLIGHT1
CWQSKE0          RLIGHTC(L,K)=RLIGHTC(L,K)+RLIGHT1+RLIGHT2
CWQSKE0         ENDDO
CWQSKE0        ENDDO
C
CWQSKE0        IF(NDLTCNT.EQ.NSTPTMP)THEN
CWQSKE0          NDLTCNT=0
CWQSKE0          TIME=DT*FLOAT(N)+TCON*TBEGIN
CWQSKE0          TIME=TIME/TCON
CWQSKE0           DO K=1,KC
CWQSKE0           DO L=2,LA
CWQSKE0            RLIGHTT(L,K)=RMULTMP*RLIGHTT(L,K)
CWQSKE0            RLIGHTC(L,K)=RMULTMP*RLIGHTC(L,K)
CWQSKE0           ENDDO
CWQSKE0          ENDDO
CWQSKE0          WRITE(1,1111)N,TIME
CWQSKE0          DO L=2,LA
CWQSKE0           WRITE(1,1113)IL(L),JL(L),(RLIGHTT(L,K),K=1,KC),
CWQSKE0     &                               (RLIGHTC(L,K),K=1,KC)
CWQSKE0          ENDDO
CWQSKE0          DO K=1,KC
CWQSKE0           DO L=2,LA
CWQSKE0            RLIGHTT(L,K)=0.
CWQSKE0            RLIGHTC(L,K)=0.
CWQSKE0           ENDDO
CWQSKE0          ENDDO
CWQSKE0        ENDIF
C
CWQSKE0        CLOSE(1)
CWQSKE0      ENDIF
C
C----------------------------------------------------------------------C
C
 1111 FORMAT(I12,F10.4)
 1112 FORMAT(2I5,12F7.2)
 1113 FORMAT(2I5,12E12.4)
 1414 FORMAT(I12,11E12.4)
C
C----------------------------------------------------------------------C
C
      RETURN
      END
